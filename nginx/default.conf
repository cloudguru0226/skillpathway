server {
    listen 80;
    server_name _;
    
    # Redirect HTTP to HTTPS in production
    # Uncomment these lines when SSL is configured
    # return 301 https://$server_name$request_uri;
    
    # For development/staging without SSL, proxy directly
    location / {
        proxy_pass http://app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }
}

# HTTPS server configuration (uncomment when SSL certificates are available)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
# 
#     # SSL Configuration
#     ssl_certificate /etc/nginx/ssl/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
# 
#     # Security headers
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
# 
#     # Static files caching
#     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
#         proxy_pass http://app;
#         expires 1y;
#         add_header Cache-Control "public, immutable";
#         add_header X-Content-Type-Options nosniff;
#     }
# 
#     # API routes with rate limiting
#     location /api/auth {
#         limit_req zone=login burst=5 nodelay;
#         proxy_pass http://app;
#         proxy_set_headers();
#     }
# 
#     location /api/ {
#         limit_req zone=api burst=20 nodelay;
#         proxy_pass http://app;
#         proxy_set_headers();
#     }
# 
#     # Main application
#     location / {
#         proxy_pass http://app;
#         proxy_set_headers();
#     }
# }

# Shared proxy headers macro
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}